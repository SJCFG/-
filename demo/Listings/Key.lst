C51 COMPILER V9.59.0.0   KEY                                                               12/09/2022 23:14:07 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\Key.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE Key.c OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Key.lst
                    -) OBJECT(.\Objects\Key.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          #define uchar unsigned char
   4          #define uint unsigned int
   5                          
   6          #define KEY_DELAY_TIME  10
   7          #define KEY_LONG_TIME   250 //长按标志时长
   8          #define KEY_TIME                500
   9          #define KEY_DOUBLE_TIME 200
  10          
  11          //开发板的要换回来key1 和 key2
  12          sbit KEY1 = P3^0;
  13          sbit KEY2 = P3^1;
  14          sbit KEY3 = P3^2;
  15          sbit KEY4 = P3^3;
  16          
  17          uchar key1_lock_flag;
  18          uint key1_cnt;
  19          
  20          uchar key2_lock_flag;
  21          uchar key2_cnt;
  22          uint key2_cnt2;
  23          uint key2_cnt3;
  24          uchar key2_times;
  25          
  26          uchar key3_lock_flag;
  27          uchar key3_cnt;
  28          uint key3_cnt2;
  29          uint key3_cnt3;
  30          uchar key3_times;
  31          
  32          uchar key4_lock_flag;
  33          uchar key4_cnt;
  34          
  35          uchar KeyNum = 0;
  36          void Key_Scan(void)
  37          {
  38   1              /*--------------------------------------------*/        
  39   1              if(KEY1) //如果按键没有按下
  40   1              {
  41   2                      key1_lock_flag = 0; //清零自锁标志
  42   2                      key1_cnt = 0; //清零计数标志
  43   2              }
  44   1              else if(!key1_lock_flag)
  45   1              {
  46   2                      key1_cnt++; // 累计按键消抖延时次数
  47   2                      if(key1_cnt > KEY_DELAY_TIME)
  48   2                      {
  49   3                              key1_cnt = 0; //清零计数变量
  50   3                              key1_lock_flag = 1; // 自锁标志，防止按键多次触发
  51   3                              KeyNum = 1; //赋键值编码
  52   3                      }
  53   2              }
  54   1              /*--------------------------------------------*/        
C51 COMPILER V9.59.0.0   KEY                                                               12/09/2022 23:14:07 PAGE 2   

  55   1              if(KEY2) //如果按键没有按下
  56   1              {
  57   2                      key2_lock_flag = 0; //清零自锁标志
  58   2                      key2_cnt = 0; //清零计数标志
  59   2                      if(key2_times > 0)
  60   2                      {
  61   3                              key2_cnt3++;
  62   3                              if(key2_cnt3 > KEY_DOUBLE_TIME)
  63   3                              {
  64   4                                      if(key2_times == 1)
  65   4                                      {       
  66   5                                              KeyNum = 2; //按键单击
  67   5                                      }
  68   4                                      key2_cnt3 = 0; //清楚双击时间间隔
  69   4                                      key2_times = 0; //清楚按键次数
  70   4                              }
  71   3                      }
  72   2              }
  73   1              else if(!key2_lock_flag)
  74   1              {
  75   2                      key2_cnt++; // 累计按键消抖延时次数
  76   2                      if(key2_cnt > KEY_DELAY_TIME)
  77   2                      {
  78   3                              key2_cnt = 0;
  79   3                              key2_cnt3 = 0;
  80   3                              key2_times++; //统计按键按下次数 
  81   3                              key2_lock_flag = 1;
  82   3                              if(key2_times == 2)
  83   3                              {
  84   4                                      KeyNum = 22; //按键双击
  85   4                              }
  86   3                      }
  87   2              }
  88   1              else if(key2_cnt < KEY_LONG_TIME)
  89   1              {
  90   2                      key2_cnt++;
  91   2              }
  92   1              else
  93   1              {
  94   2                      key2_cnt2++;
  95   2                      if(key2_cnt2 > KEY_TIME)
  96   2                      {
  97   3                              key2_cnt2 = 0;
  98   3                              KeyNum = 222;
  99   3                      }
 100   2              }
 101   1              /*--------------------------------------------*/        
 102   1              if(KEY3) //如果按键没有按下
 103   1              {
 104   2                      key3_lock_flag = 0; //清零自锁标志
 105   2                      key3_cnt = 0; //清零计数标志
 106   2                      if(key3_times > 0)
 107   2                      {
 108   3                              key3_cnt3++;
 109   3                              if(key3_cnt3 > KEY_DOUBLE_TIME)
 110   3                              {
 111   4                                      if(key3_times == 1)
 112   4                                      {       
 113   5                                              KeyNum = 3; //按键单击
 114   5                                      }
 115   4                                      key3_cnt3 = 0; //清楚双击时间间隔
 116   4                                      key3_times = 0; //清楚按键次数
C51 COMPILER V9.59.0.0   KEY                                                               12/09/2022 23:14:07 PAGE 3   

 117   4                              }
 118   3                      }
 119   2              }
 120   1              else if(!key3_lock_flag)
 121   1              {
 122   2                      key3_cnt++; // 累计按键消抖延时次数
 123   2                      if(key3_cnt > KEY_DELAY_TIME)
 124   2                      {
 125   3                              key3_cnt = 0;
 126   3                              key3_cnt3 = 0;
 127   3                              key3_times++; //统计按键按下次数 
 128   3                              key3_lock_flag = 1;
 129   3                              if(key3_times == 2)
 130   3                              {
 131   4                                      KeyNum = 33; //按键双击
 132   4                              }
 133   3                      }
 134   2              }
 135   1              else if(key3_cnt < KEY_LONG_TIME)
 136   1              {
 137   2                      key3_cnt++;
 138   2              }
 139   1              else
 140   1              {
 141   2                      key3_cnt2++;
 142   2                      if(key3_cnt2 > KEY_TIME)
 143   2                      {
 144   3                              key3_cnt2 = 0;
 145   3                              KeyNum = 3;
 146   3                      }
 147   2              }
 148   1              /*--------------------------------------------*/
 149   1              if(KEY4) //如果按键没有按下
 150   1              {
 151   2                      key4_lock_flag = 0; //清零自锁标志
 152   2                      key4_cnt = 0; //清零计数标志
 153   2              }
 154   1              else if(!key4_lock_flag)
 155   1              {
 156   2                      key4_cnt++; // 累计按键消抖延时次数
 157   2                      if(key4_cnt > KEY_DELAY_TIME)
 158   2                      {
 159   3                              key4_cnt = 0; //清零计数变量
 160   3                              key4_lock_flag = 1; // 自锁标志，防止按键多次触发
 161   3                              KeyNum = 4; //赋键值编码
 162   3                      }
 163   2              }
 164   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    345    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
